from tkinter import *
from gpiozero import LED
import RPi.GPIO as GPIO
from functools import partial

# GPIO setup (BCM mode)
GPIO.setmode(GPIO.BCM)

# Initialize LEDs with correct GPIO pins (BCM numbering)
red_led = LED(17)   # Using GPIO 17 (Pin 11 on the Pi)
blue_led = LED(27)  # Using GPIO 27 (Pin 13 on the Pi)
green_led = LED(22) # Using GPIO 22 (Pin 15 on the Pi)

# Create the main window for the GUI
main_window = Tk()
main_window.title("LED ")

# Function to turn on the selected LED and turn off others
def toggle_led(selected_led):
    # Turn off all LEDs first
    red_led.off()
    blue_led.off()
    green_led.off()
    
    # Reset button texts to indicate LEDs are off
    red_button.config(text="RED LED ON")
    blue_button.config(text="BLUE LED ON")
    green_button.config(text="GREEN LED ON")
    
    # Turn on the selected LED and change the button text
    if selected_led == 'red':
        red_led.on()
        red_button.config(text="RED LED OFF")
    elif selected_led == 'blue':
        blue_led.on()
        blue_button.config(text="BLUE LED OFF")
    elif selected_led == 'green':
        green_led.on()
        green_button.config(text="GREEN LED OFF")

# Function to close the window and clean up GPIO resources
def exit_program():
    GPIO.cleanup()  # Clean up GPIO settings
    main_window.destroy()  # Close the GUI window

# Using `functools.partial` to pass arguments to toggle_led
red_button = Button(main_window, text="RED LED ON", command=partial(toggle_led, 'red'), fg='red', height=1, width=10)
red_button.grid(row=0, column= 1)  # Place the button in the first row and 1 coloumn

blue_button = Button(main_window, text="BLUE LED ON", command=partial(toggle_led, 'blue'), fg='blue', height=1, width=10)
blue_button.grid(row=0, column=2)  # Place the button in the first row and 2 coloumn

green_button = Button(main_window, text="GREEN LED ON", command=partial(toggle_led, 'green'), fg='green', height=1, width=10)
green_button.grid(row=0, column=3)  # Place the button in the first row and 3 coloumn

# Create the exit button to close the program
exit_button = Button(main_window, text="EXIT", command=exit_program, fg='black', height=1, width=10)
exit_button.grid(row=0, column=4)  # Place the button in the first row and 4 coloumn

# Set up window close protocol to clean up GPIO 
main_window.protocol("WM_DELETE_WINDOW", exit_program)

# Run the Tkinter main loop to display the GUI
main_window.mainloop()
